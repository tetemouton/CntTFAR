fst.yr <- 2009   # This is the first year that any FAD closures were in place
#________________________________________________
# This must be modified to be the last year of complete data (usually the year prior to the report being written)
last.yr <- 2022
keep.ez <- c("CK","FM","KI","MH","NR","PG","SB","TK","TV")
hs.ez <- c("H4","H5","I0","I1","I2","I3","I4","I5","I6","I7","I8","I9","ID","IW") # Investigate whether IW should be included or not
opdat <- read.csv(paste0(base.dir, "Data/OP_PS_EEZ_FLEET.CSV"), header = T) %>%
mutate(EEZ = ifelse(eez %in% c("GL","LN","PX"), "KI", eez), fleet = ifelse(flag == EEZ, "Domestic", "Foreign"))
agdat <- read.csv(paste0(base.dir, "Data/AGG_BEST_FLG_EEZ.CSV"), header = T) %>%
mutate(EEZ = ifelse(eez %in% c("GL","LN","PX"), "KI", eez), fleet = ifelse(flag == EEZ, "Domestic", "Foreign"))
opdat <- left_join(opdat, FADcls, by = c("yy","mm"))
agdat <- left_join(agdat, FADcls, by = c("yy","mm"))
opdat_fleet <- opdat
head(opdat)
table(opdat$school)
load(paste0(base.dir, "Data/len_frq_eez.RData"),verbose = TRUE)
lf3 <- lf_full %>% mutate(EEZ = ifelse(eez_code %in% c("GL","LN","PX"), "KI", eez_code),
sp_id = recode(sp.code, BET = "bet", SKJ = "skj", YFT = "yft")) %>% rename(SchID = sch_type)
N.len <- lf3 %>% group_by(sp_id, EEZ, yy, mm, SchID, len) %>%
summarise(N.uncor = sum(raw.n, na.rm = TRUE), N.cor = sum(adj.n, na.rm = TRUE)) %>%
filter(between(len, 20, 200))
extract.LW <- function(x){
tmp <- readLines(paste0(base.dir, "Data/", x, ".ini"))
ind <- match("# Length-weight parameters", tmp)
tmp1 <- data.frame(spp = x, par1 = tmp[(ind + 1)]) %>% separate(par1, into = c("par1","par2"), sep = " ") %>%
mutate(par1 = as.numeric(par1), par2 = as.numeric(par2))
return(tmp1)
}
extend.bins <- function(Bin.vec = 1:6, spp = "skj"){
tmp <- data.frame(len = NA, Bin = NA, spp = NA)
for(i in 1:(length(Bin.vec) - 1)){
tmp1 <- data.frame(len = ceiling(Bin.vec[i]):floor(Bin.vec[i + 1]), Bin = i, spp = spp)
tmp <- rbind(tmp, tmp1)
}
return(tmp[-1,])
}
LWpars <- rbindlist(lapply(c("bet","skj","yft"), extract.LW))
LWpars
library(RODBC)
library(tidyverse)
library(lubridate)
library(magrittr)
# Change the following to the latest year's folder
dat.pth <- "C:/FAD_closure/2023/"
myConn <- odbcDriverConnect(connection="driver=SQL Server;server=nouSQL03;database=obsv_master;
Trusted_Connection=yes;")
sqlColumns(channel, "s_best")
library(RODBC)
channel <- odbcDriverConnect(connection="driver=SQL Server;server=nouSQL03;database=log_master;
Trusted_Connection=yes;")
tp <- sqlTables(myConn) # to see all the tables in the observer database
cat.tb <- sqlColumns(myConn, "log.catch_ps")
cat.tb <- sqlColumns(channel, "log.catch_ps")
set.tb <- sqlColumns(channel, "log.sets_ps")
trp.tb <- sqlColumns(channel, "log.trips_ps")
ves.tb <- sqlColumns(channel, "ref.vessel_instances")
tp <- sqlTables(channel) # to see all the tables in the observer database
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id
WHERE year(ps.logdate) > 2015 AND ps.s_activity_id in ('1','2')",
stringsAsFactors = FALSE)
head(dat)
dim(dat)
length(unique(dat$LOG_SET_ID))
table(dat$s_activity_id)
view(cat.tb)
view(set.tb)
table(dat$yr)
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id in ('1','2')
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
head(dat)
table(dat$schas_id)
table(dat$schas_id,dat$log_trip_id)
table(dat$schas_id,dat$s_activity_id)
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id = '1'
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
table(dat$schas_id,dat$log_trip_id)
table(dat$schas_id)
view(dat)
dim(dat)
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id AND logdate between pv.start_date and pv.calculated_end_date
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id = '1'
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
dim(dat)
head(dat)
library(RODBC)
library(tidyverse)
base_pth <- "C:/FSM_Request/2023_FADs/"
channel <- odbcDriverConnect(connection="driver=SQL Server;server=nouSQL03;database=log_master;
Trusted_Connection=yes;")
tp <- sqlTables(channel) # to see all the tables in the observer database
cat.tb <- sqlColumns(channel, "log.catch_ps")
set.tb <- sqlColumns(channel, "log.sets_ps")
trp.tb <- sqlColumns(channel, "log.trips_ps")
ves.tb <- sqlColumns(channel, "ref.vessel_instances")
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id AND logdate between pv.start_date and pv.calculated_end_date
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id = '1'
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
write.csv(dat, file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), row.names = FALSE)
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), row.names = FALSE)
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE)
head(dat)
table(dat$yr,dat$flag_code)
apply(table(dat$yr,dat$flag_code), 2, sum)
apply(table(dat$yr,dat$flag_code), 1, sum)
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
month(ps.logdate) AS mth,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id AND logdate between pv.start_date and pv.calculated_end_date
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id = '1'
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
head(dat)
tail(dat)
dim(dat)
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE)
length(unique(dat$LOG_SET_ID))
dat_tb <- dat %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, schas_id) %>% summarise(cntr = n())
head(dat)
dat <- sqlQuery(channel, "SELECT
pt.log_trip_id,
pt.depart_date,
pt.return_date,
pt.flag_code,
pv.vessel_id,
pv.vessel_instance_id,
pv.vesselname,
pv.vesselname_normalised,
ps.LOG_SET_ID,
ps.logdate,
year(ps.logdate) AS yr,
month(ps.logdate) AS mth,
ps.lat,
ps.lon,
ref.getlatdfromlat(ps.lat) as latd,
ref.getlondfromlon(ps.lon) as lond,
ps.eez_code,
ps.s_activity_id,
ps.schas_id,
pc.SP_CODE,
pc.SP_N,
pc.SP_MT,
pc.SP_N_EST,
pc.SP_MT_EST,
pc.discard,
pc.discard_id
FROM	log.trips_ps pt
left outer join log.sets_ps ps on  pt.log_trip_id = ps.LOG_TRIP_ID
left outer join log.catch_ps pc on  ps.LOG_SET_ID = pc.LOG_SET_ID
inner join ref.vessel_instances pv on pt.vessel_id = pv.old_vessel_id AND logdate between pv.start_date and pv.calculated_end_date
WHERE year(ps.logdate) > 2015 AND year(ps.logdate) < 2023 AND ps.s_activity_id = '1'
AND ps.eez_code = 'FM' ",
stringsAsFactors = FALSE)
write.csv(dat, file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), row.names = FALSE)
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE)
dat_tb <- dat %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, schas_id) %>% summarise(cntr = n())
dim(dat_tb)
table(dat$schas_id)
table(dat$schas_id,useNA="always")
0:2
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE) %>% mutate(school = case_when(schas_id %in% 0:2 ~ "UNA",
schas_id %in% 3:8 ~ "ASS"))
table(dat$schas_id,dat$school)
dat_tb <- dat %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, school) %>% summarise(cntr = n())
fm_tb <- dat_tb %>% filter(flag_code == "FM", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_tb
fm_tb %>% group_by(mth) %>% summarise(Nves = n(), avg_sets = mean(sets))
fm_tb
fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
fm_tb <- dat_tb %>% filter(flag_code == "FM", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_wd <- fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
fm_wd
write.csv(fm_wd, file = paste0(base_pth, "FM_PS_2022_FAD_sets_per_month.csv"), row.names = FALSE)
dat_tb %>% filter(flag_code == "FM", school == "ASS") %>% group_by(yr, mth, vesselname) %>%
summarise(sets = n()) %>% group_by(yr, mth) %>% summarise(Nves = n(), avg_sets = mean(sets))
yr_tb <- dat_tb %>% filter(flag_code == "FM", school == "ASS") %>% group_by(yr, mth, vesselname) %>%
summarise(sets = n()) %>% group_by(yr, mth) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb
3*2.67
write.csv(fm_wd, file = paste0(base_pth, "FM_PS_FAD_sets_per_month_summary.csv"), row.names = FALSE)
fm_tb <- dat_tb %>% filter(flag_code == "FM", yr == 2021, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_wd <- fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
fm_wd
write.csv(fm_wd, file = paste0(base_pth, "FM_PS_2021_FAD_sets_per_month.csv"), row.names = FALSE)
write.csv(yr_tb, file = paste0(base_pth, "FM_PS_FAD_sets_per_month_summary.csv"), row.names = FALSE)
1:12/12
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
yr_tb
windows(4000,2500)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity")
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1))
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = Nves)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1))
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = avg_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1))
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw()
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_clean() +
theme(panel.grid.minor = element_blank())
library(ggthemes)
ggplot(yr_tb, aes(x = yrmth, y = total_sets)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_clean() +
theme(panel.grid.minor = element_blank())
table(dat$flag_code)
fm_tb <- dat_tb %>% filter(flag_code == "FM", yr == 2020, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_wd <- fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
write.csv(fm_wd, file = paste0(base_pth, "FM_PS_2020_FAD_sets_per_month.csv"), row.names = FALSE)
fm_tb <- dat_tb %>% filter(flag_code == "JP", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_wd <- fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
fm_wd
write.csv(fm_wd, file = paste0(base_pth, "JP_PS_2022_FAD_sets_per_month.csv"), row.names = FALSE)
fm_tb <- dat_tb %>% filter(flag_code == "TW", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
fm_wd <- fm_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
fm_wd
write.csv(fm_wd, file = paste0(base_pth, "TW_PS_2022_FAD_sets_per_month.csv"), row.names = FALSE)
# 2022 JP flagged FAD sets by each vessel for each month
jp_tb <- dat_tb %>% filter(flag_code == "JP", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
jp_wd <- jp_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
write.csv(jp_wd, file = paste0(base_pth, "JP_PS_2022_FAD_sets_per_month.csv"), row.names = FALSE)
# 2022 TW flagged FAD sets by each vessel for each month
tw_tb <- dat_tb %>% filter(flag_code == "TW", yr == 2022, school == "ASS") %>% group_by(mth, vesselname) %>% summarise(sets = n())
tw_wd <- tw_tb %>% pivot_wider(names_from = vesselname, values_from = sets)
write.csv(tw_wd, file = paste0(base_pth, "TW_PS_2022_FAD_sets_per_month.csv"), row.names = FALSE)
jp_wd
tw_wd
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE) %>% mutate(school = case_when(schas_id %in% 0:2 ~ "UNA",
schas_id %in% 3:8 ~ "ASS"))
head(dat)
table(dat$SP_CODE)
cat_tb <- dat %>% filter(SP_CODE %in% c("BET","SKJ","YFT")) %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, school) %>%
summarise(catch = sum(SP_MT))
cat_tb
yr_tb <- dat_tb %>% filter(flag_code == "FM") %>% group_by(yr, mth, vesselname) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
dat <- read.csv(file = paste0(base_pth, "OP_PS_FM_EEZ.CSV"), header = TRUE) %>% mutate(school = case_when(schas_id %in% 0:2 ~ "UNA",
schas_id %in% 3:8 ~ "ASS"))
dat_tb <- dat %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, school) %>% summarise(cntr = n())
cat_tb <- dat %>% filter(SP_CODE %in% c("BET","SKJ","YFT")) %>% group_by(yr, mth, vessel_instance_id, vesselname, flag_code, LOG_SET_ID, school) %>%
summarise(catch = sum(SP_MT))
dat_tb
yr_tb <- dat_tb %>% filter(flag_code == "FM") %>% group_by(yr, mth, vesselname) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb <- dat_tb %>% filter(flag_code == "FM") %>% group_by(yr, mth, vesselname, school) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank())
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = c("black","darkorchid"))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12) +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("black","darkorchid"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("black","darkorchid"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
yr_tb <- dat_tb %>% filter(flag_code == "JP") %>% group_by(yr, mth, vesselname, school) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
yr_tb <- dat_tb %>% filter(flag_code == "FM") %>% group_by(yr, mth, vesselname, school) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey", position = "fill") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
yr_tb <- dat_tb %>% filter(flag_code == "JP") %>% group_by(yr, mth, vesselname, school) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey", position = "fill") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
yr_tb <- dat_tb %>% filter(flag_code == "FM") %>% group_by(yr, mth, vesselname, school) %>%
summarise(sets = n()) %>% group_by(yr, mth, school) %>% summarise(Nves = n(), avg_sets = mean(sets), total_sets = sum(sets))
yr_tb %<>% mutate(yrmth = yr + (mth - .5)/12)
windows(4000,2500)
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","steelblue"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "black") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","steelblue"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12) +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","steelblue"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "black") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","steelblue"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("darkorchid4","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("firebrick","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "black") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("firebrick","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "white") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("firebrick","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("firebrick","black"),.7))
ggplot(yr_tb, aes(x = yrmth, y = total_sets, fill = school)) + geom_bar(stat = "identity", width = 1/12, colour = "grey", position = "fill") +
scale_x_continuous(breaks = seq(min(yr_tb$yr), max(yr_tb$yr), 1)) + theme_bw() +
theme(panel.grid.minor = element_blank()) + scale_fill_manual(values = alpha(c("firebrick","black"),.7))
